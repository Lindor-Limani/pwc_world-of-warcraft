// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using pwc.Infrastructure;

#nullable disable

namespace pwc.Infrastructure.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("ItemMonster", b =>
                {
                    b.Property<int>("DroppedById")
                        .HasColumnType("integer");

                    b.Property<int>("DropsId")
                        .HasColumnType("integer");

                    b.HasKey("DroppedById", "DropsId");

                    b.HasIndex("DropsId");

                    b.ToTable("ItemMonster");
                });

            modelBuilder.Entity("pwc.Domain.Model.Charakter", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Characters");
                });

            modelBuilder.Entity("pwc.Domain.Model.CharakterItem", b =>
                {
                    b.Property<int>("CharakterId")
                        .HasColumnType("integer");

                    b.Property<int>("ItemId")
                        .HasColumnType("integer");

                    b.HasKey("CharakterId", "ItemId");

                    b.HasIndex("ItemId");

                    b.ToTable("CharacterItems");
                });

            modelBuilder.Entity("pwc.Domain.Model.Item", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("Ausdauer")
                        .HasColumnType("integer");

                    b.Property<int>("Category")
                        .HasColumnType("integer");

                    b.Property<int>("Geschicklichkeit")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Staerke")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("Items");
                });

            modelBuilder.Entity("pwc.Domain.Model.Monster", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("Damage")
                        .HasColumnType("integer");

                    b.Property<int>("Health")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Monsters");
                });

            modelBuilder.Entity("pwc.Domain.Model.MonsterItemDrop", b =>
                {
                    b.Property<int>("MonsterId")
                        .HasColumnType("integer");

                    b.Property<int>("ItemId")
                        .HasColumnType("integer");

                    b.Property<double>("DropChance")
                        .HasColumnType("double precision");

                    b.HasKey("MonsterId", "ItemId");

                    b.HasIndex("ItemId");

                    b.ToTable("MonsterItemDrops");
                });

            modelBuilder.Entity("ItemMonster", b =>
                {
                    b.HasOne("pwc.Domain.Model.Monster", null)
                        .WithMany()
                        .HasForeignKey("DroppedById")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("pwc.Domain.Model.Item", null)
                        .WithMany()
                        .HasForeignKey("DropsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("pwc.Domain.Model.CharakterItem", b =>
                {
                    b.HasOne("pwc.Domain.Model.Charakter", "Charakter")
                        .WithMany("CharakterItems")
                        .HasForeignKey("CharakterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("pwc.Domain.Model.Item", "Item")
                        .WithMany("CharakterItems")
                        .HasForeignKey("ItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Charakter");

                    b.Navigation("Item");
                });

            modelBuilder.Entity("pwc.Domain.Model.MonsterItemDrop", b =>
                {
                    b.HasOne("pwc.Domain.Model.Item", "Item")
                        .WithMany("MonsterItemDrops")
                        .HasForeignKey("ItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("pwc.Domain.Model.Monster", "Monster")
                        .WithMany("MonsterItemDrops")
                        .HasForeignKey("MonsterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Item");

                    b.Navigation("Monster");
                });

            modelBuilder.Entity("pwc.Domain.Model.Charakter", b =>
                {
                    b.Navigation("CharakterItems");
                });

            modelBuilder.Entity("pwc.Domain.Model.Item", b =>
                {
                    b.Navigation("CharakterItems");

                    b.Navigation("MonsterItemDrops");
                });

            modelBuilder.Entity("pwc.Domain.Model.Monster", b =>
                {
                    b.Navigation("MonsterItemDrops");
                });
#pragma warning restore 612, 618
        }
    }
}
